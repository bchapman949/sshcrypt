Some facts
 1. PGP is hard, or at least people think it is.
 2. The trust model actually is hard, and so people just ignore it completely.
 3. Not many people use PGP.
 4. Many people actively use ssh keys
  1. These keys are almost always RSA keys, which is also the most common PGP key type.

Given these facts, wouldn't it be cool if you could encrypt a file with someone's public key?

Other facts.
 1. Not an original idea, AWS does this for storing windows password.
  1. Not the inspiration for this project
 2. We actually use the PGP file format.


Planned Features
 1. CLI arguments! - DONE
 2. Encrypt to ALL RSA keys in an authorizedKeys file
 3. Encrypt to ALL RSA keys in an user's github account
 4. Releases
 5. If private key has a password, ask for it securely
 6. ssh-agent support?



Note.
 - Can only encrypt to one key at a time
 - Does not yet supported password protected private keys


INSTALL AND TEST

$ go get -u github.com/totallylegitbiz/sshcrypt
$ sshcrypt --help
Usage of ./sshcrypt:
  -d=false: Decrypt file instead of encrypting
  -in="-": Input file
  -out="-": Output file
  -privKey="~/.ssh/id_rsa": Private Key file (Decrypting)
  -pubKey="~/.ssh/id_rsa.pub": Public Key file (Encrypting)

$ echo hello | sshcrypt | sshcrypt -d
hello
